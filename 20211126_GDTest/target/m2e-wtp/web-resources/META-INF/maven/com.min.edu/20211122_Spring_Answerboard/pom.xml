<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.min.edu</groupId>
  <artifactId>20211122_Spring_Answerboard</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>20211122_Spring_Answerboard Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <properties>
  	<org.springframework-version>5.2.12.RELEASE</org.springframework-version>
  	<org.aspectj-version>1.9.6</org.aspectj-version>
  	<org.slf4j-version>1.7.25</org.slf4j-version>
  </properties>
  
  <dependencies>
		<!-- Spring 관련 core, MVC 개발에 필요한 라이브러리 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- exclusion은 Maven의 Dependency 관계에서 제외할 라이브러리를 작성 -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		
		<!-- Spring MVC @Controller @Servicer @Repository의 Annotation 기능을 사용함  -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- 관점지향 프로그램을 AOP 사용 라이브러리 -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- 로그처리 Spring Log4j.jar 보다 향상된 버전인 log4j를 상속하여 구현한 slf4j를 사용한다 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject 방식의 주입을 사용하기 위한 라이브러리-->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet을 사용하기 위한 라이브러리 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- java standard tag library 화면에서 자바를 쉽게 tag 형식으로 사용 하기 위함 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
		<!-- Test 단위테스트 도구로 단일의 메소드의 실행 확을 하기 위함 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Spring의 bean  JUnit test하기 위한 필요함 -->
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-test</artifactId>
    		<version>${org.springframework-version}</version>
    		<scope>test</scope>
		</dependency>        
		
		<!-- Parameter를 FilterLog에서 처리 할때 값의 유무를 쉽게 판단하는 (라이브러리)API -->
		<dependency>
    		<groupId>org.apache.commons</groupId>
    		<artifactId>commons-lang3</artifactId>
    		<version>3.9</version>
		</dependency>
		
		
		<!-- JDBC를 사용한 persistence Layer를 사용 -->
		<!-- OJDBC10 -->
		<dependency>
   		 	<groupId>com.oracle.database.jdbc</groupId>
    		<artifactId>ojdbc10</artifactId>
    		<version>19.12.0.0</version>
		</dependency>
		
		<!-- Mybatis -->
		<dependency>
    		<groupId>org.mybatis</groupId>
    		<artifactId>mybatis</artifactId>
    		<version>3.4.6</version>
		</dependency>
		
		<!-- Spring-orm : Spring Container에서 Transaction을 처리 하기 위한 tx-->
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-orm</artifactId>
    		<version>${org.springframework-version}</version>
		</dependency>
		
		<!-- mybatis-Spring : Mybatis 객체를 Spring Bean으로 만들기 위함-->
		<dependency>
    		<groupId>org.mybatis</groupId>
    		<artifactId>mybatis-spring</artifactId>
    		<version>2.0.6</version>
		</dependency>
		
		<!-- commons-dbcp : DataSource-->
		<dependency>
    		<groupId>org.apache.commons</groupId>
    		<artifactId>commons-dbcp2</artifactId>
    		<version>2.7.0</version>
		</dependency>
		
		
	</dependencies>
  <build>
    <finalName>20211122_Spring_Answerboard</finalName>
    <plugins>
    	<plugin>
    		<artifactId>maven-compiler-plugin</artifactId>
    		<version>3.8.0</version>
    		<configuration>
    			<source>11</source>
    			<target>11</target>
    		</configuration>
    	</plugin>
    </plugins>
  </build>
</project>